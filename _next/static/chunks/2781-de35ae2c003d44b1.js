"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2781],{45815:function(n,e,t){t.d(e,{z:function(){return o}});var i=t(7297),r=t(75063);function a(){var n=(0,i.Z)(["\n  fragment AccountFields on Account {\n    id\n    type\n    name\n    status\n    vatId\n  }\n"]);return a=function(){return n},n}var o=(0,r.Ps)(a())},50459:function(n,e,t){t.d(e,{lR:function(){return p},Uu:function(){return m}});var i=t(828);t(52785),t(71431);var r=t(7297),a=t(75063),o=t(85488),s=t(45815),u=t(66312),d=t(75327);function l(){var n=(0,r.Z)(['\n  query GetDashboardList(\n    $accountId: Int\n    $adminId: Int\n    $asAt: timestamptz\n    $jobHoldReasonId: Int\n    $limit: Int\n    $monthStart: timestamptz\n    $offset: Int\n    $orderBy: dashboard_home_details_order_by!\n    $q: String\n    $tileName: String\n    $dayStart: timestamptz\n    $userId: Int\n    $yearStart: timestamptz\n  ) {\n    jobs: getDashboard_HomeTile_Details(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n        ]\n      }\n      order_by: [$orderBy]\n      limit: $limit\n      offset: $offset\n    ) {\n      Assets(where: { entity: { _eq: "Job" } }) {\n        id\n        assetId\n        __typename\n      }\n      ...JobFields\n      ...JobAdminFields\n      admin: Admin {\n        id\n        name\n        __typename\n      }\n      customer: Customer {\n        ...AccountFields\n        __typename\n      }\n      location: Location {\n        id\n        name\n        __typename\n      }\n      manager: Manager {\n        ...UserFields\n        __typename\n      }\n      service: Service {\n        id\n        name\n        __typename\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n          __typename\n        }\n        __typename\n      }\n      sla: SLA {\n        id\n        name\n        __typename\n      }\n      supplier: Supplier {\n        ...AccountFields\n        __typename\n      }\n      supplierOffers: SupplierOffers {\n        status\n        rate\n        supplier: Supplier {\n          ...AccountFields\n          __typename\n        }\n        __typename\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        id\n        status\n        createdAt\n        user: User {\n          ...UserFields\n          __typename\n        }\n        __typename\n      }\n      id: jobId\n      number\n      # location\n      priority\n      scheduledAt\n      assignedTo\n      jobHoldReason\n      locationId\n      meta\n      managerId\n      description\n      customerName\n      customerId\n      reference\n      serviceName\n      status\n      supplierId\n      supplierName\n      timingStart\n      type\n      quoteNumber\n      quoteDue\n      createdAt\n    }\n    meta: getDashboard_HomeTile_Details_aggregate(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n        ]\n      }\n    ) {\n      aggregate {\n        totalCount: count\n        __typename\n      }\n      __typename\n    }\n  }\n  ',"\n  ","\n  ","\n  ","\n  ","\n"]);return l=function(){return n},n}(0,a.Ps)(l(),s.z,u.WW,o.aL,o.wd,d.Px);var c=t(22244),m=function(n){var e=["locationId","customerId","assetId"],t="";return n&&n.constructor===Object&&Object.keys(n).length>0&&(t="?",Object.entries(n).map(function(n){var r=(0,i.Z)(n,2),a=r[0],o=r[1];return o&&e.includes(a)&&(t+="".concat([a],"=").concat(o,"&")),0}),t=(t=t.substring(0,t.length-1)).replace("customerId","accountId")),t},p=function(n){var e=["completed","inDispute","disputeResolved","reportSent","invoiceSent","customerPaid","supplierPaid","closed"];switch(n){case"offered":return c.cj.filter(function(n){return"offered"===n.value});case"current":return c.cj.filter(function(n){var e=n.value;return"accepted"===e||"inProgress"===e});case"openJobs":return c.cj.filter(function(n){var e=n.value;return"raised"===e||"pending"===e});case"raised":return c.cj.filter(function(n){return"raised"===n.value});case"pending":return c.cj.filter(function(n){return"pending"===n.value});case"past":return c.cj.filter(function(n){var t=n.value;return e.includes(t)});default:return c.cj}}},52785:function(n,e,t){t.d(e,{ct:function(){return l},lS:function(){return d},p7:function(){return u}});var i=t(7297),r=t(75063);function a(){var n=(0,i.Z)(['\n  query GetJobs(\n    $endDate: timestamptz\n    $number: String\n    $limit: Int\n    $offset: Int\n    $orderBy: Job_order_by!\n    $q: String\n    $startDate: timestamptz\n    $status: [String!]\n    $type: String\n    $userId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _eq: $type }\n        supplierUserId: { _eq: $userId }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      type\n      number\n      status\n      scheduledAt\n      timingStart\n      createdAt\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        invoiceNumber\n      }\n\n      customer: Customer {\n        id\n        type\n        name\n        status\n        vatId\n      }\n      location: Location {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        name\n      }\n      supplier: Supplier {\n        id\n        name\n      }\n      supplierUser: SupplierUser {\n        id\n        fullName\n      }\n      supplierOffers: SupplierOffers {\n        supplier: Supplier {\n          id\n          name\n        }\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        user: User {\n          fullName\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _eq: $type }\n        supplierUserId: { _eq: $userId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']);return a=function(){return n},n}function o(){var n=(0,i.Z)(['\n  query GetJobs(\n    $endDate: timestamptz\n    $number: String\n    $limit: Int\n    $offset: Int\n    $q: String\n    $orderBy: Job_order_by!\n    $startDate: timestamptz\n    $status: [String!]\n    $type: [String!]\n    $userId: Int\n    $locationId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _in: $type }\n        customerUserId: { _eq: $userId }\n        locationId: { _eq: $locationId }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      type\n      number\n      status\n      scheduledAt\n      timingStart\n      createdAt\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        invoiceNumber\n      }\n\n      customer: Customer {\n        id\n        type\n        name\n        status\n        vatId\n      }\n      location: Location {\n        id\n        name\n      }\n      sublocation: Sublocation {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        name\n      }\n      supplier: Supplier {\n        id\n        name\n      }\n      supplierOffers: SupplierOffers {\n        supplier: Supplier {\n          id\n          name\n        }\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        user: User {\n          fullName\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _in: $type }\n        customerUserId: { _eq: $userId }\n        locationId: { _eq: $locationId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']);return o=function(){return n},n}function s(){var n=(0,i.Z)(["\n  query GetJobs(\n    $assetId: Int\n    $customerId: Int\n    $endDate: timestamptz\n    $number: String\n    $limit: Int\n    $locationId: Int\n    $sublocationId: Int\n    $managerId: Int\n    $customerManagerId: Int\n    $offset: Int\n    $orderBy: Job_order_by!\n    $paid: Boolean\n    $type: [String!]\n    $q: String\n    $startDate: timestamptz\n    $status: [String!]\n    $tags: [Int!]\n    $supplierId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ",'\n        assetId: { _eq: $assetId }\n        status: { _in: $status }\n        type: { _in: $type }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        sublocationId: { _eq: $sublocationId }\n        managerId: { _eq: $managerId }\n        Customer: { managerId: { _eq: $customerManagerId } }\n        paid: { _eq: $paid }\n        _or: [\n          { supplierId: { _eq: $supplierId } }\n          { SupplierOffers: { Supplier: { id: { _eq: $supplierId } } } }\n        ]\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      type\n      number\n      status\n      scheduledAt\n      timingStart\n      createdAt\n      tags: Taxonomy(\n        where: {\n          entity: { _eq: "Job" }\n          Taxonomy: {\n            _and: [\n              {status: { _eq: "active" }},\n              {type: { _eq: "tags" }}\n            ]\n\n          }\n        }\n      ) {\n        id\n        tag: Taxonomy {\n          id\n          name\n          meta\n          type\n        }\n      }\n\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        invoiceNumber\n      }\n\n      customer: Customer {\n        id\n        type\n        name\n        status\n        vatId\n\n        manager: Manager {\n          id\n          fullName\n        }\n      }\n      location: Location {\n        id\n        name\n      }\n      sublocation: Sublocation {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        name\n      }\n      supplier: Supplier {\n        id\n        name\n      }\n      supplierOffers: SupplierOffers {\n        supplier: Supplier {\n          id\n          name\n        }\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        user: User {\n          fullName\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ',"\n        assetId: { _eq: $assetId }\n        status: { _in: $status }\n        type: { _in: $type }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        sublocationId: { _eq: $sublocationId }\n        managerId: { _eq: $managerId }\n        Customer: { managerId: { _eq: $customerManagerId } }\n        paid: { _eq: $paid }\n        _or: [\n          { supplierId: { _eq: $supplierId } }\n          { SupplierOffers: { Supplier: { id: { _eq: $supplierId } } } }\n        ]\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n"]);return s=function(){return n},n}var u=(0,r.Ps)(a()),d=(0,r.Ps)(o()),l=function(n){var e=n.tagsWhere;return(0,r.Ps)(s(),e,e)}},71431:function(n,e,t){var i=t(7297),r=t(75063),a=t(85488),o=t(45815),s=t(66312),u=t(75327);function d(){var n=(0,i.Z)(["\n  query GetDashboardList(\n    $accountId: Int\n    $customerId: Int\n    $supplierId: Int\n    $locationId: Int\n    $managerId: Int\n    $customerManagerId: Int\n    $adminId: Int\n    $startDate: timestamptz\n    $endDate: timestamptz\n    $asAt: timestamptz\n    $jobHoldReasonId: Int\n    $limit: Int\n    $monthStart: timestamptz\n    $offset: Int\n    $orderBy: dashboard_home_details_order_by!\n    $q: String\n    $tileName: String\n    $dayStart: timestamptz\n    $userId: Int\n    $yearStart: timestamptz\n    $number: String\n    $status: [String!]\n  ) {\n    jobs: getDashboard_HomeTile_Details(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n        locationId: $locationId\n        managerId: $managerId\n        customerManagerId: $customerManagerId\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { number: { _eq: $number } }\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ",'\n        status: { _in: $status }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        managerId: { _eq: $managerId }\n        _or: [\n          { supplierId: { _eq: $supplierId } }\n          { SupplierOffers: { Supplier: { id: { _eq: $supplierId } } } }\n        ]\n      }\n      order_by: [$orderBy]\n      limit: $limit\n      offset: $offset\n    ) {\n      Assets(where: { entity: { _eq: "Job" } }) {\n        id\n        assetId\n        __typename\n      }\n      ...JobFields\n      ...JobAdminFields\n      admin: Admin {\n        id\n        name\n        __typename\n      }\n      customer: Customer {\n        ...AccountFields\n        manager: Manager {\n          id\n          fullName\n        }\n        __typename\n      }\n      location: Location {\n        id\n        name\n        __typename\n      }\n      job: Job {\n        status\n      }\n      manager: Manager {\n        ...UserFields\n        __typename\n      }\n      service: Service {\n        id\n        name\n        __typename\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n          __typename\n        }\n        __typename\n      }\n      tags: Taxonomy(\n        where: {\n          entity: { _eq: "Job" }\n          Taxonomy: {\n            status: { _eq: "active" }\n            type: { _eq: "tags" }\n          }\n        }\n      ) {\n        id\n        tag: Taxonomy {\n          id\n          name\n          meta\n          type\n        }\n      }\n      sla: SLA {\n        id\n        name\n        __typename\n      }\n      supplier: Supplier {\n        ...AccountFields\n        __typename\n      }\n      supplierOffers: SupplierOffers {\n        status\n        rate\n        supplier: Supplier {\n          ...AccountFields\n          __typename\n        }\n        __typename\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        id\n        status\n        createdAt\n        user: User {\n          ...UserFields\n          __typename\n        }\n        __typename\n      }\n      id: jobId\n      number\n      # location\n      priority\n      scheduledAt\n      assignedTo\n      jobHoldReason\n      locationId\n      meta\n      managerId\n      description\n      customerName\n      customerId\n      reference\n      serviceName\n      status\n      supplierId\n      supplierName\n      timingStart\n      type\n      quoteNumber\n      quoteDue\n      createdAt\n    }\n    meta: getDashboard_HomeTile_Details_aggregate(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n        locationId: $locationId\n        managerId: $managerId\n        customerManagerId: $customerManagerId\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { number: { _eq: $number } }\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ',"\n        status: { _in: $status }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        managerId: { _eq: $managerId }\n        supplierId: { _eq: $supplierId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n        __typename\n      }\n      __typename\n    }\n  }\n  ","\n  ","\n  ","\n  ","\n  ","\n"]);return d=function(){return n},n}var l=function(n){var e=n.tagsWhere;return(0,r.Ps)(d(),e,e,o.z,s.WW,a.aL,a.wd,u.Px)};e.Z=l},85488:function(n,e,t){t.d(e,{H_:function(){return y},Vw:function(){return q},aL:function(){return _},pf:function(){return g},sW:function(){return b},wd:function(){return $},xY:function(){return f},yT:function(){return I}});var i=t(7297),r=t(75063),a=t(66312);function o(){var n=(0,i.Z)(["\n  fragment JobFields on Job {\n    access\n    issueReportedDescription\n    adminId\n    costCategory\n    createdAt\n    description\n    id\n    meta\n    pricing\n    reference\n    scheduledAt\n    status\n    supplierLabourAmount\n    supplierMaterialsAmount\n    timing\n    timingEnd\n    timingNormalHours\n    timingStart\n    title\n    type\n    siteVisitStart\n    siteVisitEnd\n    siteVisitWeekends\n    amount\n    number\n    quoted\n    timingStatus\n    correctDuration\n    correctStart\n    correctEnd\n  }\n"]);return o=function(){return n},n}function s(){var n=(0,i.Z)(["\n  fragment JobQuoteFields on Job {\n    quoted\n    quoteNumber\n    quoteDue\n    quoteDueSupplier\n    quoteCharge\n  }\n"]);return s=function(){return n},n}function u(){var n=(0,i.Z)(["\n  fragment JobAdminFields on Job {\n    supplierId\n    supplierUserId\n  }\n"]);return u=function(){return n},n}function d(){var n=(0,i.Z)(["\n  fragment JobSupplierFields on Job {\n    supplierId\n    supplierUserId\n  }\n"]);return d=function(){return n},n}function l(){var n=(0,i.Z)(["\n  mutation UpdateJob(\n    $id: Int!\n    $changes: Job_set_input\n    $timing: [JobTiming_insert_input!]!\n    $_append: Job_append_input = {}\n  ) {\n    update_Job_by_pk(pk_columns: { id: $id }, _set: $changes, _append: $_append) {\n      id\n    }\n    insert_JobTiming(objects: $timing) {\n      returning {\n        id\n        status\n        createdAt\n      }\n    }\n  }\n"]);return l=function(){return n},n}function c(){var n=(0,i.Z)(["\n  mutation InsertJobTiming($timing: [JobTiming_insert_input!]!) {\n    insert_JobTiming(objects: $timing) {\n      returning {\n        id\n        status\n        createdAt\n      }\n    }\n  }\n"]);return c=function(){return n},n}function m(){var n=(0,i.Z)(['\n  query GetJobHistory(\n    $jobId: Int\n    $locationId: Int!\n    $limit: Int\n    $offset: Int\n    $serviceId: Int\n    $startDate: timestamptz!\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      order_by: { createdAt: desc }\n      where: {\n        createdAt: { _gte: $startDate }\n        id: { _neq: $jobId }\n        locationId: { _eq: $locationId }\n        serviceId: { _eq: $serviceId }\n        status: { _nin: ["pending", "raised", "offered", "accepted", "inProgress"] }\n      }\n    ) {\n      id\n      title\n      status\n      scheduledAt\n      createdAt\n      meta\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        createdAt: { _gte: $startDate }\n        id: { _neq: $jobId }\n        locationId: { _eq: $locationId }\n        serviceId: { _eq: $serviceId }\n        status: { _nin: ["pending", "raised", "offered", "accepted", "inProgress"] }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']);return m=function(){return n},n}function p(){var n=(0,i.Z)(['\n  query GetJob($jobId: Int!) {\n    job: Job_by_pk(id: $jobId) {\n      access\n      costCategory\n      customerSpendThreshold\n      description\n      supplierLabourAmount\n      supplierMaterialsAmount\n      quoteDue\n      quoteNumber\n      id\n      number\n      meta\n      paymentMethod\n      reference\n      status\n      title\n      type\n      quoted\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        id\n        invoiceNumber\n      }\n      quotations: SupplierQuotes {\n        id\n        quoteNumber\n        status\n        lineItems: SupplierQuoteLineItems {\n          id\n          description\n          item\n          qty\n          qtyUnit\n          quoteId\n          total\n          type\n          unitRate\n          supplierTotal\n        }\n        supplier: Supplier {\n          id\n          type\n          name\n          accountUsers: Account_Users {\n            user: User {\n              id\n              fullName\n              nameFirst\n              nameLast\n              phone\n              email\n              devices: UserDevices(where: { status: { _eq: "active" } }) {\n                id\n                playerId\n              }\n            }\n          }\n        }\n      }\n      admin: Admin {\n        id\n        name\n      }\n      service: Service {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      customer: Customer {\n        id\n        name\n        website\n        slas: SLAs(where: { entity: { _eq: "Account" } }) {\n          id\n          entity\n          entityId\n          onSite\n          onSiteUnit\n          jobReport\n          jobReportUnit\n          completion\n          completionUnit\n          notes\n          inUse\n          normalRate\n          oohRate\n          premiumRate\n          minimumInterval\n          minimumLength\n          slaId\n          sla: SLA {\n            id\n            name\n            notes\n            normalRate\n            oohRate\n            premiumRate\n            onSite\n            onSiteUnit\n            jobReport\n            jobReportUnit\n            completion\n            completionUnit\n            minimumInterval\n            minimumLength\n          }\n        }\n      }\n      customerUser: CustomerUser {\n        id\n        nameFirst\n        nameLast\n        fullName\n        email\n        phone\n      }\n      supplier: Supplier {\n        id\n        name\n        contactUsers: Account_Users(where: { isContact: { _eq: true } }) {\n          id\n          role\n          position\n          isContact\n          lastSignInAt\n          userId\n          user: User {\n            id\n            fullName\n            nameFirst\n            nameLast\n            email\n            phone\n          }\n        }\n      }\n      supplierUser: SupplierUser {\n        id\n        fullName\n        nameFirst\n        nameLast\n        email\n        phone\n      }\n      location: Location {\n        id\n        name\n        addresses: Addresses(where: { entity: { _eq: "Location" } }) {\n          ...AddressEntityFields\n          address: Address {\n            ...AddressFields\n            country: Country {\n              id\n              name\n            }\n          }\n        }\n        slas: SLAs(where: { entity: { _eq: "Location" } }) {\n          id\n          entity\n          entityId\n          onSite\n          onSiteUnit\n          jobReport\n          jobReportUnit\n          completion\n          completionUnit\n          notes\n          inUse\n          normalRate\n          oohRate\n          premiumRate\n          minimumInterval\n          minimumLength\n          slaId\n          sla: SLA {\n            id\n            name\n            notes\n            normalRate\n            oohRate\n            premiumRate\n            onSite\n            onSiteUnit\n            jobReport\n            jobReportUnit\n            completion\n            completionUnit\n            minimumInterval\n            minimumLength\n          }\n        }\n      }\n      sla: SLA {\n        id\n        name\n        notes\n        normalRate\n        oohRate\n        premiumRate\n        onSite\n        onSiteUnit\n        jobReport\n        jobReportUnit\n        completion\n        completionUnit\n        minimumInterval\n        minimumLength\n      }\n      costCategoryTaxonomy: CostCategory {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n    }\n  }\n  ',"\n  ","\n"]);return p=function(){return n},n}var _=(0,r.Ps)(o()),g=(0,r.Ps)(s()),$=(0,r.Ps)(u()),y=(0,r.Ps)(d()),f=(0,r.Ps)(l()),I=(0,r.Ps)(c()),b=(0,r.Ps)(m()),q=(0,r.Ps)(p(),a.WW,a.MR)},22186:function(n,e,t){t.d(e,{V:function(){return c}});var i=t(26042),r=t(69396),a=t(85893),o=t(67294),s=t(45697),u=t.n(s),d=t(87918),l=t(41796),c=function(n){var e,t=n.chipProps,s=n.tagEntityId,u=n.name,c=n.color,m=n.onDelete,p=(0,o.useMemo)(function(){return m?(0,r.Z)((0,i.Z)({},t),{onDelete:function(n){n.stopPropagation(),m(s)}}):(0,i.Z)({},t)},[t,m,s]);return(0,a.jsx)(d.Z,(0,r.Z)((0,i.Z)({},p),{size:"small",label:u,sx:{fontSize:"11px",color:(e=c,(0,l.mi)(e,"#FFFFFF")>2.5?"#FFFFFF":"#000"),bgcolor:c,borderRadius:"0px 16px 16px 0px"}}))};c.defaultProps={chipProps:{},onDelete:null,color:"#f2f2f2"},c.propTypes={chipProps:u().object,tagEntityId:u().string.isRequired,name:u().string.isRequired,color:u().string.isRequired,onDelete:u().func.isRequired}},28864:function(n,e,t){t.d(e,{T:function(){return f}});var i=t(85893),r=t(45697),a=t.n(r),o=t(93946),s=t(97212),u=t(98619),d=t(59334),l=t(51233),c=t(50135),m=t(50594),p=t(40055),_=t(5336),g=t(10166),$=t(67294),y=t(42283),f=function(n){var e=n.tagEntityId,t=n.tagId,r=n.name,a=n.color,d=n.editable,g=n.onDelete,f=n.onColorChange,b=n.onNameChange,q=(0,y.cI)({defaultValues:{name:r,color:a}}),h=q.register,v=q.handleSubmit,S=(0,$.useState)(null),x=S[0],k=S[1],T=function(){return[{icon:"delete",onClick:function(n){n.stopPropagation(),g(e)},tooltip:"Remove"},{icon:"edit",onClick:function(n){n.stopPropagation(),k("rename")},tooltip:"Rename"},{icon:"visibility",onClick:function(n){n.stopPropagation(),k("changeColor")},tooltip:"Change color"}]},j=function(n){n.stopPropagation(),k(null)},A=function(n){f({tagId:t,color:n.color}),k(null)},D=function(n){b({tagId:t,name:n.name}),k(null)};return(0,i.jsx)(s.ZP,{disablePadding:!0,secondaryAction:!d||!x&&(0,i.jsx)(_.C,{icon:"defaultHoriz",actionsData:T}),children:x?({changeColor:function(){return(0,i.jsxs)(l.Z,{width:"100%",direction:"row",justifyContent:"space-between",alignItems:"center",pl:"16px",pr:"16px",children:[(0,i.jsx)("input",{name:"color",ref:h,type:"color",style:{padding:0,border:"none","background-color":"unset"}}),(0,i.jsxs)(l.Z,{direction:"row",alignItems:"center",children:[(0,i.jsx)(o.Z,{size:"small",color:"danger",onClick:j,children:(0,i.jsx)(m.Z,{})}),(0,i.jsx)(o.Z,{size:"small",color:"success",onClick:v(A),children:(0,i.jsx)(p.Z,{})})]})]})},rename:function(){return(0,i.jsxs)(l.Z,{width:"100%",direction:"row",justifyContent:"space-between",alignItems:"center",pl:"16px",pr:"16px",children:[(0,i.jsx)(c.Z,{name:"name",inputRef:h,variant:"standard",color:"secondary"}),(0,i.jsxs)(l.Z,{direction:"row",alignItems:"center",children:[(0,i.jsx)(o.Z,{size:"small",color:"danger",onClick:j,children:(0,i.jsx)(m.Z,{})}),(0,i.jsx)(o.Z,{size:"small",color:"success",onClick:v(D),children:(0,i.jsx)(p.Z,{})})]})]})}})[x]():(0,i.jsx)(u.Z,{children:(0,i.jsx)(I,{primary:r,color:a})})},t)};f.defaultProps={onDelete:function(){},onColorChange:function(){},onNameChange:function(){},editable:!0},f.propTypes={tagEntityId:a().string.isRequired,tagId:a().string.isRequired,name:a().string.isRequired,color:a().string.isRequired,editable:a().bool,onDelete:a().func.isRequired,onColorChange:a().func.isRequired,onNameChange:a().func.isRequired};var I=(0,g.Z)(d.Z)(function(n){return n.theme,{"&.MuiListItemText-root .MuiListItemText-primary":{fontWeight:700,color:n.color}}})},48381:function(n,e,t){t.d(e,{K:function(){return C}});var i=t(828),r=t(29815),a=t(85893),o=t(45697),s=t.n(o),u=t(50319),d=t(51738),l=t(26042),c=t(69396),m=t(67294),p=t(6812),_=t(11961),g=t(93362),$=t(23776),y=t(5616),f=t(98456),I=t(93946),b=t(78462),q=t(18972),h=t(14564),v=t(51233),S=t(50135),x=t(28864),k=t(10166),T=t(2845),j=(0,g.D)(),A=function(n){var e=n.entityId,t=(n.getTagsForEntityQuery,n.getTagsForEntityVariables,n.refetchQueries),o=n.entity,s=n.handleDeleteTagEntity,g=(0,T.x)().user,h=(0,m.useState)(null),k=h[0],A=h[1],Z=(0,m.useState)(""),C=Z[0],U=Z[1],w=(0,m.useState)(""),N=w[0],P=w[1],F=(0,m.useState)(""),J=F[0],R=F[1],E=(0,p.a)(d.BU,{skip:!k,variables:{entityId:e,entity:o}}),L=E.data,z=(void 0===L?{tags:[]}:L).tags,O=E.loading,M=(0,p.a)(d.gI,{skip:!k,variables:{entityId:e,entity:o,q:""!==J?"%".concat(J,"%"):null}}),H=M.data,Q=(void 0===H?{tags:[]}:H).tags,B=M.loading,V=(0,i.Z)((0,u.D)(d.LE,{refetchQueries:["GetAllTags"].concat((0,r.Z)(t)),onCompleted:function(){P(""),U(null)}}),2),G=V[0],W=V[1].loading,K=(0,i.Z)((0,u.D)(d.g$,{refetchQueries:["GetAllTags"].concat((0,r.Z)(t))}),2),X=K[0],Y=K[1].loading;(0,m.useEffect)(function(){var n=setTimeout(function(){R(N)},500);return function(){return clearTimeout(n)}},[N]);var nn=function(n){n.stopPropagation(),A(n.currentTarget)},ne=function(){A(null)},nt=function(n,t){"string"==typeof t?U({label:t}):t&&t.inputValue?(G({variables:{objects:[{entity:o,entityId:e,Taxonomy:{data:{type:"tags",status:"active",name:t.inputValue,meta:{color:"#0679d8"},isGroup:!1,adminId:g.adminId}}}]}}),U(null)):t&&t.value&&(G({variables:{objects:[{entity:o,entityId:e,taxonomyId:t.value}]}}),U(null))},ni=function(n,e){var t=j(n,e),i=e.inputValue,r=n.some(function(n){return i===n.label});return""===i||r||t.push({inputValue:i,label:'Add "'.concat(i,'"')}),t},nr=function(n){return"string"==typeof n?n:n.inputValue?n.inputValue:n.label},na=function(n){var e;X({variables:{tagId:n.tagId,object:{meta:{color:n.color}}}})},no=function(n){var e;X({variables:{tagId:n.tagId,object:{name:n.name}}})},ns=Boolean(k),nu=null==Q?void 0:Q.map(function(n){return{label:n.name,value:n.id}});return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(D,{id:ns?"tags-popover":void 0,open:ns,anchorEl:k,onClose:ne,anchorOrigin:{vertical:"top",horizontal:"right"},children:(0,a.jsxs)(y.Z,{sx:{maxHeight:"80vh",width:"280px",p:"10px",pt:"5px"},children:[(0,a.jsx)($.Z,{freeSolo:!0,selectOnFocus:!0,clearOnBlur:!0,handleHomeEndKeys:!0,options:nu,value:C,onChange:nt,onInputChange:function(n,e){P(e)},filterOptions:ni,getOptionLabel:nr,renderOption:function(n,e){return(0,a.jsx)(q.Z,(0,c.Z)((0,l.Z)({},n),{children:e.label}))},renderInput:function(n){return(0,a.jsx)(S.Z,(0,c.Z)((0,l.Z)({},n),{variant:"standard",color:"secondary",label:"Search tag",InputProps:(0,c.Z)((0,l.Z)({},n.InputProps),{endAdornment:(0,a.jsxs)(a.Fragment,{children:[B||W?(0,a.jsx)(f.Z,{color:"inherit",size:20}):null,n.InputProps.endAdornment]})})}))},sx:{pl:"16px",pr:"16px"}}),O||Y?(0,a.jsx)(v.Z,{width:"100%",alignItems:"center",p:4,children:(0,a.jsx)(f.Z,{color:"secondary"})}):(0,a.jsx)(b.Z,{children:z.map(function(n){var e;return(0,a.jsx)(x.T,{tagEntityId:n.id,tagId:n.tag.id,name:n.tag.name,color:null===(e=n.tag.meta)||void 0===e?void 0:e.color,onDelete:s,onColorChange:na,onNameChange:no})})})]})}),(0,a.jsx)(I.Z,{color:"black",onClick:nn,children:(0,a.jsx)(_.Z,{sx:{height:"16px",width:"16px"}})})]})};A.defaultProps={entityId:null,entity:null,refetchQueries:[],handleDeleteTagEntity:function(){}},A.propTypes={entityId:s().number,entity:s().string,getTagsForEntityQuery:s().object,getTagsForEntityVariables:s().object,refetchQueries:s().array,handleDeleteTagEntity:s().func};var D=(0,k.Z)(h.ZP)(function(n){return n.theme,{"& .MuiPaper-root":{borderRadius:"12px"}}}),Z=t(11975),C=function(n){var e=n.row,t=n.refetchQueries,o=n.entity,s=(0,i.Z)((0,u.D)(d.cS,{refetchQueries:["GetTaskTags"].concat((0,r.Z)(t))}),1)[0],l=function(n){s({variables:{tagEntityId:n}})};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(Z.P,{tags:e.tags,title:e.title,handleDeleteTagEntity:l}),(0,a.jsx)(A,{entityId:e.id,refetchQueries:t,handleDeleteTagEntity:l,entity:o})]})};C.propTypes={row:s().object,refetchQueries:s().array},C.defaultProps={row:{},displayOnly:!1,refetchQueries:[],handleDeleteTagEntity:function(){}}},11975:function(n,e,t){t.d(e,{P:function(){return p}});var i=t(85893),r=t(67294),a=t(45697),o=t.n(a),s=t(15861),u=t(14564),d=t(78462),l=t(51233),c=t(22186),m=t(28864),p=function(n){var e=n.tags,t=(n.title,n.handleDeleteTagEntity),a=(0,r.useState)(null),o=a[0],p=a[1],_=null==e?void 0:e.slice(0,5),g=(null==e?void 0:e.length)-(null==_?void 0:_.length),$=Boolean(o);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(l.Z,{direction:"row",spacing:1,children:_.map(function(n,e){var r;return(0,i.jsx)(c.V,{tagEntityId:n.id||e,name:n.tag.name,color:null===(r=n.tag.meta)||void 0===r?void 0:r.color,onDelete:t})})}),g>0&&(0,i.jsxs)(s.Z,{fontWeight:700,ml:1,onMouseEnter:function(n){p(n.currentTarget),n.stopPropagation()},children:["+",g]}),(0,i.jsx)(u.ZP,{id:$?"tags-in-table-popover":void 0,open:$,anchorEl:o,onClose:function(){return p(null)},anchorOrigin:{vertical:"top",horizontal:"right"},children:(0,i.jsx)(d.Z,{children:null==e?void 0:e.map(function(n){var e;return(0,i.jsx)(m.T,{tagEntityId:n.id,tagId:n.tag.id,name:n.tag.name,color:null===(e=n.tag.meta)||void 0===e?void 0:e.color,editable:!1},n.tag.id)})})})]})};p.propTypes={tags:o().object,title:o().string},p.defaultProps={tags:{},displayOnly:!1,refetchQueries:[],handleDeleteTagEntity:function(){}}},57179:function(n,e,t){t.d(e,{r:function(){return g}});var i=t(26042),r=t(69396),a=t(828),o=t(85893),s=t(67294),u=t(42283),d=t(73359),l=t(23776),c=t(98456),m=t(50135),p=t(87918),_=t(51738),g=function(n){var e=n.control,t=(0,s.useState)(""),g=t[0],$=t[1],y=(0,s.useState)(""),f=y[0],I=y[1],b=(0,a.Z)((0,d.t)(_.lx,{variables:{q:""!==f?"%".concat(f,"%"):null}}),2),q=b[0],h=b[1],v=h.loading,S=h.data,x=(void 0===S?{items:[]}:S).items;return(0,s.useEffect)(function(){var n=setTimeout(function(){I(g)},500);return function(){return clearTimeout(n)}},[g]),(0,o.jsx)(u.Qr,{control:e,name:"tags",render:function(n){var e=n.value,t=n.onChange;return(0,o.jsx)(l.Z,{multiple:!0,limitTags:6,color:"secondary",onOpen:function(){return q()},options:x,value:e||[],inputValue:g,onChange:function(n,e){t(e)},onInputChange:function(n,e){$(e)},getOptionLabel:function(n){return n.label},renderTags:function(n,e){return n.map(function(n,t){return(0,o.jsx)(p.Z,(0,i.Z)({size:"small",label:n.label},e({index:t})),t)})},renderInput:function(n){return(0,o.jsx)(m.Z,(0,r.Z)((0,i.Z)({},n),{variant:"standard",color:"secondary",label:"Select tags",InputProps:(0,r.Z)((0,i.Z)({},n.InputProps),{endAdornment:(0,o.jsxs)(o.Fragment,{children:[v?(0,o.jsx)(c.Z,{color:"inherit",size:20}):null,n.InputProps.endAdornment]})})}))}})}})}},51738:function(n,e,t){t.d(e,{Aw:function(){return h},BU:function(){return $},C3:function(){return q},LE:function(){return f},Zm:function(){return g},cS:function(){return I},g$:function(){return b},gI:function(){return _},lx:function(){return y}});var i=t(7297),r=t(75063);function a(){var n=(0,i.Z)(['\n  query GetTagsForEntity($q: String!, $limit: Int = 50, $offset: Int = 0) {\n    tags: Taxonomy(\n      where: { name: { _ilike: $q }, status: { _eq: "active" }, type: { _eq: "tags" } }\n      limit: $limit\n      offset: $offset\n      order_by: { id: desc }\n    ) {\n      id\n      name\n      meta\n    }\n  }\n']);return a=function(){return n},n}function o(){var n=(0,i.Z)(["\n  mutation CreateTag($objects: [Taxonomy_insert_input!]!) {\n    insert_Taxonomy(objects: $objects) {\n      returning {\n        id\n        name\n        meta\n      }\n    }\n  }\n"]);return o=function(){return n},n}function s(){var n=(0,i.Z)(['\n  query GetEntityTags($entityId: Int!, $entity: String!) {\n    tags: Taxonomy_Entity(\n      where: {\n        entity: { _eq: $entity }\n        entityId: { _eq: $entityId }\n        Taxonomy: { status: { _eq: "active" }, type: { _eq: "tags" } }\n      }\n      order_by: { id: desc }\n    ) {\n      id\n      tag: Taxonomy {\n        id\n        name\n        meta\n      }\n    }\n  }\n']);return s=function(){return n},n}function u(){var n=(0,i.Z)(['\n  query GetTagsForSelect($q: String, $limit: Int = 50, $offset: Int = 0) {\n    items: Taxonomy(\n      where: { name: { _ilike: $q }, status: { _eq: "active" }, type: { _eq: "tags" } }\n      limit: $limit\n      offset: $offset\n      order_by: { id: desc }\n    ) {\n      value: id\n      label: name\n    }\n  }\n']);return u=function(){return n},n}function d(){var n=(0,i.Z)(["\n  mutation CreateTagsAgainstEntity($objects: [Taxonomy_Entity_insert_input!]!) {\n    insert_Taxonomy_Entity(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"]);return d=function(){return n},n}function l(){var n=(0,i.Z)(["\n  mutation DeleteTagAgainstEntity($tagEntityId: Int!) {\n    delete_Taxonomy_Entity_by_pk(id: $tagEntityId) {\n      id\n      taxonomyId\n    }\n  }\n"]);return l=function(){return n},n}function c(){var n=(0,i.Z)(["\n  mutation UpdateTagAgainstEntity($tagId: Int!, $object: Taxonomy_set_input!) {\n    update_Taxonomy_by_pk(pk_columns: { id: $tagId }, _set: $object) {\n      id\n      name\n      meta\n    }\n  }\n"]);return c=function(){return n},n}function m(){var n=(0,i.Z)(["\n  mutation CreateTagsAgainstEntityWithFollowing($objects: [Taxonomy_Entity_insert_input!]!) {\n    insert_Taxonomy_Entity(objects: $objects) {\n      returning {\n        id\n        taxonomyId\n      }\n    }\n  }\n"]);return m=function(){return n},n}function p(){var n=(0,i.Z)(["\n  mutation DeleteTagAgainstEntityWithFollowing($where: Taxonomy_Entity_bool_exp!) {\n    delete_Taxonomy_Entity(where: $where) {\n      returning {\n        id\n        taxonomyId\n      }\n    }\n  }\n"]);return p=function(){return n},n}var _=(0,r.Ps)(a()),g=(0,r.Ps)(o()),$=(0,r.Ps)(s()),y=(0,r.Ps)(u()),f=(0,r.Ps)(d()),I=(0,r.Ps)(l()),b=(0,r.Ps)(c()),q=(0,r.Ps)(m()),h=(0,r.Ps)(p())},9492:function(n,e,t){t.d(e,{S:function(){return i}});var i=function(n,e){var t=document.createElement("a");"string"==typeof t.download?(document.body.appendChild(t),t.download=e,t.href=n,t.click(),document.body.removeChild(t)):location.replace(n)}},59938:function(n,e,t){t.d(e,{X:function(){return _}});var i=t(14924),r=t(82670),a=t(828),o=t(7297),s=t(67294),u=t(6812),d=t(50319),l=t(75063),c=t(18586);function m(){var n=(0,o.Z)(["\n  query GetAccountUserFilters($accountUserId: Int!) {\n    accountUser: Account_User_by_pk(id: $accountUserId) {\n      filters\n    }\n  }\n"]);return m=function(){return n},n}function p(){var n=(0,o.Z)(["\n  mutation SetAccountUserFilters($accountUserId: Int!, $filters: jsonb) {\n    update_Account_User_by_pk(pk_columns: { id: $accountUserId }, _append: { filters: $filters }) {\n      id\n    }\n  }\n"]);return p=function(){return n},n}function _(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"sessionStorage",o=(0,c.q)().user,l=(0,s.useState)(function(){try{switch(t){case"network":case"state":return e;case"sessionStorage":return JSON.parse(window.sessionStorage.getItem(n))||e}}catch(i){return e}}),m=l[0],p=l[1],_=function(e){try{var a=(0,r.Z)(e,Function)?e(m):e;switch(p(a),t){case"network":y({variables:{accountUserId:null==o?void 0:o.accountUserId,filters:(0,i.Z)({},n,a)}});break;case"sessionStorage":window.sessionStorage.setItem(n,JSON.stringify(a))}}catch(s){}};(0,u.a)(g,{variables:{accountUserId:null==o?void 0:o.accountUserId},skip:"network"!==t,onCompleted:function(t){var i=t.accountUser;i&&p(i.filters[n]||e)}});var y=(0,a.Z)((0,d.D)($),1)[0];return[m,_]}var g=(0,l.Ps)(m()),$=(0,l.Ps)(p())}}]);